# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-04-13 11:48
from __future__ import unicode_literals

import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(max_length=6, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devices',
            },
        ),
        migrations.CreateModel(
            name='DeviceMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=8)),
                ('power', models.FloatField(default=0)),
                ('data_speed', models.IntegerField(default=0)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modes', to='request_creation.Device')),
            ],
            options={
                'db_table': 'device_modes',
            },
        ),
        migrations.CreateModel(
            name='DeviceSwitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('argument_part_len', models.SmallIntegerField()),
                ('time_delay', models.DurationField(validators=[django.core.validators.MaxValueValidator(datetime.timedelta(6, 81600), message='Delay time must be less than 600 000 s')])),
                ('time_duration', models.DurationField(validators=[django.core.validators.MaxValueValidator(datetime.timedelta(6, 81600), message='Duration must be less than 600 000 s')])),
                ('argument_part', models.CharField(blank=True, max_length=620, null=True)),
                ('data_amount', models.BigIntegerField(default=0)),
                ('power_amount', models.FloatField(default=0)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='request_creation.Device')),
                ('mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='request_creation.DeviceMode')),
            ],
            options={
                'db_table': 'device_switches',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.SmallIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(9999, message='Request number must be less than 9999')])),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('orbit_flag', models.CharField(choices=[('v', 'восходящая'), ('n', 'нисходящая'), ('p', 'не имеет значения')], default='p', max_length=1)),
                ('latitude_start', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MaxValueValidator(Decimal('90.0'), message='Request latitude start must be less then 82.0'), django.core.validators.MinValueValidator(Decimal('-82.0'), message='Request latitude start must be greater than -82.0')])),
                ('longitude_left', models.DecimalField(decimal_places=1, max_digits=4, validators=[django.core.validators.MaxValueValidator(Decimal('359.9'), message='Request longitude stop must be less then 359.9'), django.core.validators.MinValueValidator(Decimal('0.0'), message='Request longitude start must be greater then 000.0')])),
                ('longitude_right', models.DecimalField(decimal_places=1, max_digits=4, validators=[django.core.validators.MaxValueValidator(Decimal('359.9'), message='Request longitude stop must be less then 359.9'), django.core.validators.MinValueValidator(Decimal('0.0'), message='Request longitude start must be greater then 000.0')])),
                ('device_amount', models.SmallIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(8, message='Request device amount must be in range 1-8'), django.core.validators.MinValueValidator(0, message='Request device amount must be in range 1-8')])),
                ('request_file', models.FilePathField(null=True, path='E:\\workspace\\Promis\\ionosat_request\\request_files', validators=[django.core.validators.RegexValidator('KNA(0[1-9]|[12][0-9]|3[01])(0[1-9]|1[012])\\d\\d\\d{4}\\.zp', message='Request file name should be KNAddmmyynnnn.zp')])),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('total_data_amount', models.BigIntegerField(default=0)),
                ('total_power_amount', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'requests',
            },
        ),
        migrations.AddField(
            model_name='deviceswitch',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='switches', to='request_creation.Request'),
        ),
        migrations.AlterUniqueTogether(
            name='deviceswitch',
            unique_together=set([('device', 'request')]),
        ),
        migrations.AlterUniqueTogether(
            name='devicemode',
            unique_together=set([('device', 'name')]),
        ),
    ]
